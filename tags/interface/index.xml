<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>interface on Clarity</title><link>https://ganboonhong.github.io/refs/tags/interface/</link><description>Recent content in interface on Clarity</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Sun, 25 Sep 2022 14:02:55 +0800</lastBuildDate><atom:link href="https://ganboonhong.github.io/refs/tags/interface/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Go Interface With Lego</title><link>https://ganboonhong.github.io/refs/posts/golang/understanding-interface-with-lego/</link><pubDate>Sun, 25 Sep 2022 14:02:55 +0800</pubDate><guid>https://ganboonhong.github.io/refs/posts/golang/understanding-interface-with-lego/</guid><description>
The purpose of interface is to enable unrelated objects to communicate with each other. In order to communicate, both sides must follow a protocol. Like Lego, in order to put 2 pieces of brick together, you need to make sure they can &amp;quot;communicate&amp;quot; with each other. The bottom one's studs will fit the one on top's tubes. The designers (programmers) define the interfaces to let two bricks (objects) to communicate.</description></item></channel></rss>